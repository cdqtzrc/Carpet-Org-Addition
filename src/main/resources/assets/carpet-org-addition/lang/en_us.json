{
  "carpet.category.ORG": "Org",
  "carpet.rule.commandItemShadowing.desc": "Enable /itemshadowing command to create a shadow of the item in the main hand",
  "carpet.rule.setBedrockHardness.desc": "Set the hardness of bedrock",
  "carpet.rule.bindingCurseInvalidation.desc": "Enable player to take off armors with binding curse enchantments",
  "carpet.rule.disableOpenOrWaterDetection.desc": "Disable detection of open water in fishing, thus allowing fishing for treasures in any water",
  "carpet.rule.sculkShriekerCanSummon.desc": "Enable sculk shrieker placed by player to summon warden",
  "carpet.rule.creativeImmuneKill.desc": "Make player in creative mode immune to /kill command",
  "carpet.rule.itemNeverDespawn.desc": "Disable the despawning of items",
  "carpet.rule.flyingUseOnBlockFirework.desc": "Limit fire rocket only to be used when flying",
  "carpet.rule.staringEndermanNotAngry.desc": "Disable enderman getting angry when player stares at them",
  "carpet.rule.farmlandPreventStepping.desc": "Prevent farmland from being trampled",
  "carpet.rule.maxBlockPlaceDistance.desc": "Set the maximum block placement distance",
  "carpet.rule.maxBlockPlaceDistance.extra.0": "Also works for blocks breaking and interaction",
  "carpet.rule.simpleUpdateSkipper.desc": "Backport update skipper before 1.20-pre2 by disconnecting the redstone wire and prevent comparator dropping over tripdoors",
  "carpet.rule.channelingIgnoreWeather.desc": "Ignore the weather condition when using channeling enchantment",
  "carpet.rule.notDamageEnderPearl.desc": "Disable the falling damage when using ender pearl",
  "carpet.rule.disableDamageImmunity.desc": "Disable the immunity after sustaining damage",
  "carpet.rule.hayBlockCompleteOffsetFall.desc": "Disable the falling damage when landing on hay block",
  "carpet.rule.blueIceCanSpawn.desc": "Prevent mobs from naturally spawning on blue ice",
  "carpet.rule.disableBatCanSpawn.desc": "Prevent bats from naturally spawning",
  "carpet.rule.turtleEggFastHatch.desc": "Make turtle eggs always crack when random ticked, rather than cracking with a 1/500 chance",
  "carpet.rule.openShulkerBoxForcibly.desc": "Allow players to open the shulker box forcibly, even for those boxes blocked by a solid blocks",
  "carpet.rule.villagerInfiniteTrade.desc": "Allow infinitely trading with villagers",
  "carpet.rule.fireworkRocketUseCooldown.desc": "Add a cooldown for using firework rocket",
  "carpet.rule.riptideIgnoreWeather.desc": "Ignore the weather condition when using riptide enchantment",
  "carpet.rule.disablePiglinZombify.desc": "Prevent piglins from zombifying",
  "carpet.rule.disableVillagerWitch.desc": "Prevent villagers from turning into witches",
  "carpet.rule.disableIronGolemAttackPlayer.desc": "Prevent iron golems from attacking players",
  "carpet.rule.pickaxeMinedBedrock.desc": "Make bedrock mineable with pickaxe",
  "carpet.rule.villagerHeal.desc": "Heal villagers for 1 health every 4 seconds",
  "carpet.rule.fakePlayerHeal.desc": "Heal fake players for 1 health every 2 seconds",
  "carpet.rule.commandPlayerTools.desc": "Enable /playertools command for fake player manipulation",
  "carpet.rule.maxBlockPlaceDistanceReferToEntity.desc": "Make entities within maxBlockPlaceDistance reachable",
  "carpet.rule.knockbackStick.desc": "Enable knockback stick, i.e. stick with knockback enchantment",
  "carpet.rule.disableRespawnBlocksExplode.desc": "Disable the explosion of respawn blocks, e.g. beds or respawn anchors",
  "carpet.rule.CCEUpdateSuppression.desc": "Making update suppressor based on ClassCaseException through naming the shulker box as \"updateSuppression\" or \"更新抑制器\"",
  "carpet.rule.openSeedPermissions.desc": "Allow players without permission to use /seed command",
  "carpet.rule.commandSendMessage.desc": "Enable /sendMessage command for sending copiable message or urls",
  "carpet.rule.openCarpetPermissions.desc": "Allow /carpet in command singleplayer game",
  "carpet.rule.openGameRulePermissions.desc": "Allow players without permission to use /gamerule command",
  "carpet.rule.openVillagerInventory.desc": "Allow to open villager inventory when sneaking",
  "carpet.rule.peacefulCreeper.desc": "Creeper will not attack player",
  "carpet.rule.commandXpTransfer.desc": "Enable /xpTransfer to transfer experience between players",
  "carpet.rule.commandSpectator.desc": "Enable /spectator to switch between spectator and survival mode",
  "carpet.rule.commandFinder.desc": "Enable /finder command to search for blocks or items in certain ranges",
  "carpet.rule.commandKillMe.desc": "Enable /killme command to kill the player itself",
  "carpet.rule.commandLocations.desc": "Enable /locations command for location marker management",
  "carpet.rule.healthNotFullCanEat.desc": "You can eat food when full if your health is not full and saturation level less than 5",
  "carpet.rule.canMineSpawner.desc": "Make spawner mineable with silk touch tools",
  "carpet.rule.fakePlayerSpawnNoKnockback.desc": "Remove the knockback, burning time and falling distance when fake players respawning",
  "carpet.rule.canActivatesObserver.desc": "Enable flint and steel used to directly activate observers",
  "carpet.rule.disableWaterFreezes.desc": "Disable water freezing in cold biomes",
  "carpet.rule.fakePlayerCraftKeepItem.desc": "Keep at least one item in inventory for each from recipes when fake players crafting items, unless it is an unstackable item",
  "carpet.rule.fakePlayerCraftKeepItem.extra.0": "Also works for fake players trading",
  "carpet.rule.commandParticleLine.desc": "Enable /particleLine command to draw a line connecting two points with particle effects",
  "carpet.rule.disableMobPeacefulDespawn.desc": "Keep entities with \"PersistenceRequired\" tag (With naming, etc.) from despawning in peaceful mode",
  "carpet.rule.climbingBoat.desc": "Enable boat drove by player to climb up one block high",
  "carpet.rule.reusableSmithingTemplate.desc": "Disable the consumption of smithing template when smithing",
  "carpet.rule.openTpPermissions.desc": "Allow players without permission to use /tp command",
  "carpet.rule.softDeepslate.desc": "Set the hardness of deepslate and its variants to be the same as stone or cobblestone",
  "carpet.rule.softObsidian.desc": "Set the hardness of obsidian to be the same as end stone",
  "carpet.rule.softOres.desc": "Set the hardness of ores to be the same as the corresponding stone, deepslate or end stone",
  "carpet.rule.betterTotemOfUndying.desc": "Undying Totem could function as long as it is in the inventory",
  "carpet.rule.commandPlayerAction.desc": "Enable /playerAction command to allow fake players to automatically perform some actions",
  "carpet.rule.fakePlayerCraftPickItemFromShulkerBox.desc": "Enable fake players to pick items from shulker boxes when crafting",
  "carpet.rule.customPiglinBarteringTime.desc": "Customize the time required for piglin bartering",
  "carpet.rule.quickSettingFakePlayerCraft.desc": "Open the fake player crafting GUI directly by right-clicking the fake player with a workbench in mainhand, requiring the player to have the permission to execute the /playerAction command",
  "carpet.rule.quickSettingFakePlayerCraft.extra.0": "false: Disable this rule",
  "carpet.rule.quickSettingFakePlayerCraft.extra.1": "sneaking: Only when sneaking",
  "carpet.rule.quickSettingFakePlayerCraft.extra.2": "true: Can always open",
  "carpet.rule.wetSpongeImmediatelyDry.desc": "Wet sponge can be dried immediately",
  "carpet.rule.wetSpongeImmediatelyDry.extra.0": "false: Disable this rule (Dried immediately only in nether as in vanilla)",
  "carpet.rule.wetSpongeImmediatelyDry.extra.1": "arid: Any arid biomes (biomes that have no rain)",
  "carpet.rule.wetSpongeImmediatelyDry.extra.2": "all: Dried immediately in any biomes",
  "carpet.rule.wetSpongeImmediatelyDry.extra.3": "disable: Wet sponge will not dried immediately even in nether",
  "carpet.rule.fakePlayerKeepInventory.desc": "Keep inventories and experience when fake player dies",
  "carpet.rule.commandCreeper.desc": "Enable /creeper command to make a creeper explosion around the specified player. The explosion only damages entities, and cause no block damages",
  "carpet.rule.commandRuleSearch.desc": "Enable /ruleSearch to search for carpet rules with the specified string in the translated name",
  "carpet.rule.superChargedCreeper.desc": "Drop a head for each entity when killed by a charged creeper",
  "carpet.rule.playerDropHead.desc": "Player drops head when killed by a charged creeper",
  "carpet.rule.beaconRangeExpand.desc": "Extend range of beacon to specified distance",
  "carpet.rule.beaconRangeExpand.extra.0": "The value could be negative to shrink the range",
  "carpet.rule.beaconWorldHeight.desc": "Set the vertical range of beacon to the entire world height",
  "carpet.rule.mobWhetherOrNotCanPickItem.desc": "Set whether items could be picked up by mobs",
  "carpet.rule.mobWhetherOrNotCanPickItem.extra.0": "no: No mobs can pick up items",
  "carpet.rule.mobWhetherOrNotCanPickItem.extra.1": "vanilla: Vanilla behaviour",
  "carpet.rule.mobWhetherOrNotCanPickItem.extra.2": "yes: Any mobs can pick up items",
  "carpet.rule.mobWhetherOrNotCanPickItem.extra.3": "yes_only_hostile: Any hostile mobs can pick up items, while others keep vanilla behaviour",
  "carpet.rule.mobWhetherOrNotCanPickItem.extra.4": "no_only_hostile: Any hostile mobs cannot pick up items, while others keep vanilla behaviour",
  "carpet.rule.canHighlightBlockPos.desc": "Add a button for highlight path point on the right of block position text. Requiring OMMC as a client-side mod",
  "carpet.rule.commandPlayerManager.desc": "Enable /playerManager command to manage fake players login",
  "carpet.rule.blockDropsDirectlyEnterInventory.desc": "Item dropping from mining will directly enter the player's inventory",
  "carpet.rule.turtleEggFastMine.desc": "Player can mine multiple turtle eggs at once",
  "carpet.rule.commandNavigate.desc": "Enable /navigate command to guide players to a specific location",
  "carpet.rule.playerDropsNotDespawning.desc": "Set the Age of player drops to -32768 to prevent them from despawning",
  "carpet.rule.fakePlayerMaxCraftCount.desc": "Customize the maximizing crafting count of fake players in one game tick",
  "carpet.rule.fakePlayerMaxCraftCount.extra.0": "-1 represents no limit",
  "carpet.rule.message.disableRespawnBlocksExplode": "Respawn blocks explosion is disabled",
  "carpet.rule.validate.less_than_or_equal": "Value should be less than or equal to %s",
  "carpet.rule.validate.greater_than_or_equal_or_number": "Value should be greater than or equal to %s, or be %s",
  "carpet.rule.validate.between_two_number_or_number": "Value should be between %s and %s, or be %s",
  "carpet.command.not_fake_player": "%s is not a fake player",
  "carpet.command.source.not_player": "Expect a player to execute this command",
  "carpet.command.file.json.file_already_exist": "JSON file already exists",
  "carpet.command.file.json.not_file": "Cannot find JSON file",
  "carpet.command.file.json.json_parse": "Failed to parse JSON file",
  "carpet.command.file.json.read": "Failed to read JSON file",
  "carpet.command.file.nbt.read": "Failed to read NBT from file",
  "carpet.command.dimension.overworld": "Overworld",
  "carpet.command.dimension.the_nether": "Nether",
  "carpet.command.dimension.the_end": "End",
  "carpet.command.boolean.true": "True",
  "carpet.command.boolean.false": "False",
  "carpet.command.time.tick": "%s game tick",
  "carpet.command.time.second": "%ss",
  "carpet.command.time.minute": "%smin",
  "carpet.command.time.hour": "%sh",
  "carpet.command.time.minute_second": "%smin %ss",
  "carpet.command.time.hour_minute": "%sh %smin",
  "carpet.command.time.format": "%s/%s/%s %s:%s:%s",
  "carpet.commands.finder.timeout": "Task timeout",
  "carpet.commands.finder.block.too_much_blocks": "Too many %s around, unable to count",
  "carpet.commands.finder.block.not_found_block": "No %s found in range",
  "carpet.commands.finder.block.find": "Found %2s of %1s",
  "carpet.commands.finder.block.find.limit": "Found %2$s of %1$s, the nearest %s are:",
  "carpet.commands.finder.block.feedback": "Distance: %s blocks away %s",
  "carpet.commands.finder.item.drops": "Drops",
  "carpet.commands.finder.item.each": "Found %3$s results in container %2$s in %1$s",
  "carpet.commands.finder.item.group": "%s stacks",
  "carpet.commands.finder.item.remainder": "%s items",
  "carpet.commands.finder.item.count": "%s stacks %s items",
  "carpet.commands.finder.item.too_much_container": "Too many containers with %s, unable to count (Number: %s)",
  "carpet.commands.finder.item.find.not_item": "Failed to find %s in nearby containers",
  "carpet.commands.finder.item.find": "Found %3$s of %2$s in nearby %1$s containers",
  "carpet.commands.finder.item.find.limit": "Found %3$s of %2$s in nearby %1$s containers, the nearest %s are:",
  "carpet.commands.finder.trade.find.not_trade": "Unable to find %2$s or %3$s selling %1$s",
  "carpet.commands.finder.trade.item.each": "The %3$s-th trade option of %2$s in %1$s sells it",
  "carpet.commands.finder.trade.enchanted_book.each": "The %3$s-th trade option of %2$s in %1$s sells %4$s",
  "carpet.commands.finder.trade.result": "Found %1$s of %3$s or %4$s selling %2$s",
  "carpet.commands.finder.trade.result.limit": "Found %1$s of %3$s or %4$s selling %2$s, the nearest %5$s are:",
  "carpet.commands.finder.trade.enchanted_book.result.limit": "Found %1$s of %3$s or %4$s selling %2$s, the nearest %5$s are:",
  "carpet.commands.itemshadowing.main_hand_is_empty": "Main hand is empty",
  "carpet.commands.itemshadowing.off_hand_not_empty": "Offhand isn't empty",
  "carpet.commands.itemshadowing.broadcast": "%s has made a shadow item of %s",
  "carpet.commands.killMe": "%s has killed itselves",
  "carpet.commands.locations.text.overworld": "Overworld: %s",
  "carpet.commands.locations.text.overworld_and_the_nether": "Overworld: %s(Nether: %s)",
  "carpet.commands.locations.text.the_nether": "Nether: %s",
  "carpet.commands.locations.text.the_nether_and_overworld": "Nether: %s(Overworld: %s)",
  "carpet.commands.locations.text.the_end": "The End: %s",
  "carpet.commands.locations.show.overworld": "%s in Overworld: %s",
  "carpet.commands.locations.show.overworld_and_the_nether": "%s in Overworld: %s(Nether: %s)",
  "carpet.commands.locations.show.the_nether": "%s in Nether: %s",
  "carpet.commands.locations.show.the_nether_and_overworld": "%s in Nether: %s(Overworld: %s)",
  "carpet.commands.locations.show.the_end": "%s in The End: %s",
  "carpet.commands.locations.show.custom_dimension": "%s in %s: %s",
  "carpet.commands.locations.text.info.illustrate": "Description: %s",
  "carpet.commands.locations.text.info.creator_player_name": "Creator: %s",
  "carpet.commands.locations.text.info.creator_time": "Creation Time: %s",
  "carpet.commands.locations.text.info.distance": "Distance: %s blocks",
  "carpet.commands.locations.add.fail.unknown_dimension": "Unable to add location for custom dimension",
  "carpet.commands.locations.add.fail.already_exists": "Failed to add location: [%s] already exists",
  "carpet.commands.locations.add.success": "Location [%s] is added (%s)",
  "carpet.commands.locations.list.parse": "Failed to parse position [%s]",
  "carpet.commands.locations.illustrate.remove": "Removed description of location [%s]",
  "carpet.commands.locations.illustrate.add": "Added description \"%s\" for location [%s]",
  "carpet.commands.locations.illustrate.parse": "Failed to parse position",
  "carpet.commands.locations.illustrate.io": "Failed to add description for location [%s]",
  "carpet.commands.locations.another.add": "Position in opposite dimension is added",
  "carpet.commands.locations.another.add.not": "Unable to add position of opposite dimension for The End",
  "carpet.commands.locations.another.parse": "Failed to parse position",
  "carpet.commands.locations.another.io": "Unable to add position of opposite dimension for location [%s]",
  "carpet.commands.locations.info.parse": "Failed to parse position",
  "carpet.commands.locations.info.io": "Failed to show information for location [%s]",
  "carpet.commands.locations.remove.success": "Location [%s] is removed",
  "carpet.commands.locations.remove.fail": "Failed to remove location [%s]",
  "carpet.commands.locations.set": "Position of location [%s] is modified",
  "carpet.commands.locations.set.parse": "Failed to parse location [%s]",
  "carpet.commands.locations.set.io": "Failed to modify position of location [%s]",
  "carpet.commands.playerTools.self_or_fake_player": "You are only allowed to manipulate yourself or fake players",
  "carpet.commands.playerTools.heal": "Healed %s health",
  "carpet.commands.playerTools.is_player": "%s is a human player",
  "carpet.commands.playerTools.is_fake_player": "%s is a fake player",
  "carpet.commands.playerTools.pos": "%s is at %s%s",
  "carpet.commands.playerTools.pos.overworld": "Overworld",
  "carpet.commands.playerTools.pos.the_nether": "Nether",
  "carpet.commands.playerTools.pos.the_end": "The End",
  "carpet.commands.playerTools.pos.default": "Unknown Dimension",
  "carpet.commands.playerTools.tp.protected_fake_player": "Unable to teleport protected fake player",
  "carpet.commands.playerTools.tp.success": "%s is teleported to %s",
  "carpet.commands.sendMessage.url.click_open_url": "Click for URL",
  "carpet.commands.sendMessage.location.overworld": "%s in Overworld: %s <-- %s",
  "carpet.commands.sendMessage.location.the_nether": "%s in Nether: %s <-- %s",
  "carpet.commands.sendMessage.location.the_end": "%s in The End: %s",
  "carpet.commands.sendMessage.location.default": "%s in %s: %s",
  "carpet.commands.sendMessage.item.empty": "No items holding",
  "carpet.commands.xpTransfer.self_or_fake_player": "You are only allowed to manipulate yourself or fake players",
  "carpet.commands.xpTransfer.all": "Transfer all experience from %1$s to%3$s, %2$s in total",
  "carpet.commands.xpTransfer.half": "Transfer half of experience from %1$s to%3$s, %2$s in total",
  "carpet.commands.xpTransfer.point.fail": "%s doesn't have enough experience (%s>%s)",
  "carpet.commands.xpTransfer.point": "Transfer experience from %1$s to%3$s, %2$s in total",
  "carpet.commands.presets.parse.string.fail": "Failed to parse string \"%s\"",
  "carpet.commands.presets.parse.item.fail": "Failed to parse %2$s-th item from file [%1$s]",
  "carpet.commands.presets.parse.craft_presets.fail": "Failed to parse JSON file %s",
  "carpet.commands.playerAction.set": "Quick crafting needs ctrlQCraftingFix, click %s to activate",
  "carpet.commands.playerAction.set.here": "[here]",
  "carpet.commands.playerAction.set.has_permission": "Click to input \"/carpet ctrlQCraftingFix true\"",
  "carpet.commands.playerAction.set.no_permission": "You do not have enough permission to execute the command",
  "carpet.commands.playerAction.info.stop": "%s has no actions",
  "carpet.commands.playerAction.info.craft.item_tag": "Item tags",
  "carpet.commands.playerAction.info.craft.no_crafting_table": "%s isn't openning %s",
  "carpet.commands.playerAction.info.craft.recipe": "%s is crafting with recipe:",
  "carpet.commands.playerAction.info.craft.result": "%s is crafting %s:",
  "carpet.commands.playerAction.info.craft.state": "Crafting status of %s:",
  "carpet.commands.playerAction.info.craft.gui": "Set crafting recipes",
  "carpet.commands.playerAction.info.sorting.item": "%s is sorting %s items:",
  "carpet.commands.playerAction.info.sorting.this": "%s: %s",
  "carpet.commands.playerAction.info.sorting.other": "Other items: %s",
  "carpet.commands.playerAction.info.clean.item": "%s is clearing %s",
  "carpet.commands.playerAction.info.clean.designated_item": "%s is clearing %3$s in %2$s",
  "carpet.commands.playerAction.info.fill.item": "%s is filling %3$s into %2$s",
  "carpet.commands.playerAction.info.fill_all.item": "%s is filling items to %s",
  "carpet.commands.playerAction.info.rename.item": "%s is renaming %s as \"%s\"",
  "carpet.commands.playerAction.info.rename.xp": "%s levels of experiense left",
  "carpet.commands.playerAction.info.rename.no_anvil": "%s isn't renaming %s",
  "carpet.commands.playerAction.info.stonecutting.item": "%1$s is crafting %4$s with %2$s and %3$s",
  "carpet.commands.playerAction.info.stonecutting.button": "Button Index: %s",
  "carpet.commands.playerAction.info.stonecutting.no_stonecutting": "%s isn't opening %s",
  "carpet.commands.playerAction.info.trade.item": "%s is trading items of %s-th option",
  "carpet.commands.playerAction.info.trade.option": "%s-th trading option:",
  "carpet.commands.playerAction.info.trade.disabled": "Trading option is disabled",
  "carpet.commands.playerAction.info.trade.state": "Trading Status:",
  "carpet.commands.playerAction.info.trade.no_villager": "%s isn't trading",
  "carpet.commands.playerAction.stone_cutting": "Failed to craft: Stop crafting",
  "carpet.commands.playerAction.trade": "Failed to trade: Stop trading",
  "carpet.commands.playerAction.craft": "Failed to craft: Stop crafting",
  "carpet.commands.playerAction.rename.not_experience": "Experience not sufficient, stop renaming",
  "carpet.commands.playerAction.rename": "Failed to rename: Stop renaming",
  "carpet.commands.playerAction.farming": "%s is planting %s",
  "carpet.commands.playerAction.farming.none": "%s isn't planting",
  "carpet.commands.playerAction.exception.null_pointer": "Null pointer exception occurred: Stop operation",
  "carpet.commands.playerAction.exception.infinite_loop": "Game stuck in infinite loop: Stop operation",
  "carpet.commands.playerAction.exception.runtime": "Critical errors occur when %s is performing actions: Stop operation",
  "carpet.commands.playerAction.closeScreen.fail": "%s isn't opening any GUI",
  "carpet.commands.playerAction.closeScreen": "GUI opened by %s is closed",
  "carpet.commands.playerManager.save.success": "%s's player data to local file saved successfully",
  "carpet.commands.playerManager.save.resave": "%s's player data to local file saved again",
  "carpet.commands.playerManager.save.fail": "Failed to save %s's player data to local file",
  "carpet.commands.playerManager.spawn.fail": "Failed to spawn fake player",
  "carpet.commands.playerManager.spawn.io": "Failed to load player data of \"%s\" from local file",
  "carpet.commands.playerManager.spawn.player_exist": "Player already exists",
  "carpet.commands.playerManager.delete.success": "Successfully removed player data of %s",
  "carpet.commands.playerManager.delete.fail": "Failed to remove player data of %s",
  "carpet.commands.playerManager.click.online": "Join",
  "carpet.commands.playerManager.click.offline": "Leave",
  "carpet.commands.playerManager.info.pos": "Position: [%s]",
  "carpet.commands.playerManager.info.direction": "Facing: [%s，%s]",
  "carpet.commands.playerManager.info.dimension": "Dimension: %s",
  "carpet.commands.playerManager.info.gamemode": "Mode: %s",
  "carpet.commands.playerManager.info.flying": "isFlying: %s",
  "carpet.commands.playerManager.info.sneaking": "isSneaking: %s",
  "carpet.commands.playerManager.info.annotation": "Annotation: %s",
  "carpet.commands.playerManager.schedule.read_file": "Failed to load player data from file",
  "carpet.commands.playerManager.schedule.login": "%s will join in %s",
  "carpet.commands.playerManager.schedule.login.try": "%s will try to join again in %s",
  "carpet.commands.playerManager.schedule.login.modify": "Now %s will join in %s",
  "carpet.commands.playerManager.schedule.login.cancel": "Now %s will not join in %s",
  "carpet.commands.playerManager.schedule.logout": "%s will leave in %s",
  "carpet.commands.playerManager.schedule.logout.modify": "Now %s will leave in %s",
  "carpet.commands.playerManager.schedule.logout.cancel": "Now %s will not leave in %s",
  "carpet.commands.playerManager.schedule.relogin": "%s will repeatedly join and leave every %s gt",
  "carpet.commands.playerManager.schedule.relogin.set_interval": "Now %s will repeatedly join and leave every %s gt",
  "carpet.commands.playerManager.schedule.relogin.cancel": "Now %s will not repeatedly join and leave",
  "carpet.commands.playerManager.schedule.list.empty": "No players in schedule list",
  "carpet.commands.spectator.teleport.fail": "You are not %s",
  "carpet.commands.spectator.teleport.success.dimension": "%s is teleported to %s",
  "carpet.commands.navigate.start_navigation": "%s starts to neviagates -> %s",
  "carpet.commands.navigate.parse_uuid_fail": "Failed to parse UUID from string",
  "carpet.commands.navigate.unable_to_find": "Failed to find %2$s of %1$s",
  "carpet.commands.navigate.name.spawnpoint": "Spawn Point",
  "carpet.commands.navigate.name.last_death_location": "Last Death",
  "carpet.commands.navigate.exception": "Navigator is encountering unexpected problems",
  "carpet.commands.navigate.hud.reach": "You have reached the destination",
  "carpet.commands.navigate.hud.of": "%2$s of %1$s",
  "carpet.commands.navigate.hud.in": "%s is in %s",
  "carpet.commands.navigate.hud.distance": "Distance: %s blocks away",
  "carpet.commands.navigate.hud.target_death": "Target is killed or removed",
  "carpet.commands.navigate.hud.stop": "Navigation ends",
  "carpet.commands.ruleSearch.feedback": "Carpet Mod options matching \"%s\"",
  "carpet.logger.wanderingTrader.time.second": "%ss",
  "carpet.logger.wanderingTrader.time.minutes_and_seconds": "%sm%ss",
  "carpet.logger.wanderingTrader.hud": "Till next spawning: %s, success rate: %s",
  "carpet.logger.wanderingTrader.message": "Wandering Trader spawns at %s",
  "carpet.logger.wanderingTrader.message.click": "Wandering Trader spawns at %s, click to %s",
  "carpet.logger.wanderingTrader.message.navigate": "[navigate]",
  "carpet.logger.wanderingTrader.message.navigate.hover": "Click to navigate %s",
  "carpet.logger.wanderingTrader.gamerule.not_enabled": "Gamerule \"%s\" is not enabled",
  "carpet.inventory.item.placeholder": "PLACEHOLDER"
}